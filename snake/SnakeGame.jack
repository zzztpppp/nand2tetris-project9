// The game of snake

class SnakeGame {
    field Snake snake;
    field int score;
    field Tuple food_pos;
    
    constructor SnakeGame new() {
        do Snake.init();
        let snake = Snake.new(2, 64, 64);
        let score = 0;
        let food_pos = Tuple.new(64, 128);
        return this;
    }
    
    /** Check if the snake get the food */
    method boolean if_grow() {
        var Tuple snake_pos;
        let snake_pos = snake.report_pos();
        if ((snake_pos.get_x() = food_pos.get_x()) & (snake_pos.get_y() = food_pos.get_y())) {
            return true;
        }
        
        return false;
    }
    
    /** Check if the snake hit the wall or itself */
    method boolean if_hit() {
        var Tuple snake_pos;
        var int snake_length;
        var int num_iter;
        
        let snake_pos = snake.report_pos();
        if ((snake_pos.get_x() < 0) | (snake_pos.get_x() > 511)) {return true;}
        if ((snake_pos.get_y() < 0) | (snake_pos.get_y() > 255)) {return true;}
        if (snake.tangled()) {return true;}
        return false;
    }
    
    /** Randomly generate a food on canvas */
    method void feed() {
        var Tuple new_food;
        var int x, y;
        
        let x = LCGRandom.randRange(1, 512 / Math.sqrt(Snake.get_volume())) * Math.sqrt(Snake.get_volume());
        let y = LCGRandom.randRange(0, 256 / (Math.sqrt(Snake.get_volume())) - 1) * Math.sqrt(Snake.get_volume());
        let new_food = Tuple.new(x, y);
        let food_pos = new_food;
        return;
    }
    
    /** Dispose the game object */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }
    
    /** Main game function **/
    method void run() {
        var char key;
        var int wait;
        
        while (true)
        
        while(true) {
            let key = 0;
            while (key = 0) {
                let key = Keyboard.keyPressed();
                do snake.forward();
                let key = Keyboard.keyPressed();
                do snake.draw();
                do HelperFuncs.draw_square(Snake.get_volume(), food_pos);
                if (if_grow()) {
                    do snake.grow();
                    do feed();
                    
                }
                if (if_hit()) {return;}
                let key = Keyboard.keyPressed();
                let wait = 0;
                while (wait < 8000) {
                    let key = Keyboard.keyPressed();
                    let wait = wait + 1;
                }
          }
            //do s.grow();
            //do s.draw();
            if (key = 130) {do snake.turn(2);}
            if (key = 131) {do snake.turn(1);}
            if (key = 132) {do snake.turn(0);}
            if (key = 133) {do snake.turn(3);}
        }
        return;
    }
}