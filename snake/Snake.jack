// The main component of snake game.

/** Implementation of snake object*/
class Snake {
     
    field int x, y;     // Location of the head of the snake the screen.
    field int v;        // Velocity of the snake.
    field int d;        // Directon of the snake; 0 stands for right 1 for up 2 for left 3 for down.
    field Array body;   // The pixes that represents the snake.
    field int length;   // Length of the snake.
    field int direction;
    
    static int volume;  // Number of pixels that a chunk is consisted of.
    
    /** Construct a new instance of snake from a given
     *  length and the head loaction */
    constructor Snake new(int l, int p_x, int p_y) {
        var Tuple temp;
        let x = p_x;
        let y = p_y;
        let d = 0;
        let length = l;
        let body = Array.new(length);
        
        while (l > 0) {
            let body[length] = Tuple.new(p_x, p_y);
            let temp = body[length];
            do temp.print();
            let p_x = p_x - volume; 
            let l = l - 1;
        }
        return this;
    }
    
    /** Initialize the static variables */
    function void init() {
        let volume = 4;
        return;
    }
    
    
    /* Draw the snake on screen */
    method void draw() {
        var int num_iter;
        let num_iter = length;
        while (num_iter > 0) {
            do HelperFuncs.draw_square(volume, body[num_iter - 1]);
        }
        
        return;
    }
    
    /** Chnage the direction the snake moves toward. */
    method void turn(int direction) {
        var int diff;
        let diff = d - direction;
        if (d = direction) {return;}
        if ( (Math.abs(d) = 1 ) | (Math.abs(d) = 3) ) {
            let d = direction;
        }
        return;
    }
    
    /** The snake grows if it gets a food */
    method void grow() {
    
        var Array new_body;
        var Tuple new_part;
        var int num_iter;
        var Tuple part;
        
        let part = body[0];
        let length = length + 1;
        let new_body = Array.new(length);
        let new_part = Tuple.new((part.get_x() - volume), part.get_y());
        let new_body[0] = new_part;
        
        
        let num_iter = length;
        while (num_iter > 1) {
            let new_body[num_iter - 1] = body[num_iter - 2];
            let num_iter = num_iter - 1;
        }
        return;
    }
    
    /** Move the snake forward a unit */
    method void forward() {
    
        var int num_iter;
        var int new_x;
        var int new_y;
        var Tuple new_part;
        var Tuple new_head;
        var Tuple part;
        
        let num_iter = length;
          
        if(d = 0) { let new_head = Tuple.new(x + 4, y);}
        if(d = 1) { let new_head = Tuple.new(x, y - 4);}
        if(d = 2) { let new_head = Tuple.new(x - 4, y);}
        if(d = 3) { let new_head = Tuple.new(x, y + 4);}
        
        while(num_iter > 1) {
            
            let part = body[num_iter - 1];
            let new_x = part.get_x();
            let new_y = part.get_y();
            let new_part = Tuple.new(new_x, new_y);
            let body[num_iter - 2] = new_part;
            let num_iter = num_iter - 1;
        }
        
        return;
    }
        
    /** Unit test */
    function void main() {
        var Snake s;
        do Snake.init();
        let s = Snake.new(2, 200, 100);
        //do s.draw();
        //do s.forward();
        //do s.draw();
        //do s.forward();
        //do s.draw();
        //do s.turn(1);
        //do s.forward();
        //do s.draw();
        //do s.forward();
        //do s.draw();
        return;
    }
}
